import OpenAI from 'openai';
import dotenv from 'dotenv';

// Carregar vari√°veis de ambiente
dotenv.config();

async function testeFinalIA() {
  console.log('üéØ TESTE FINAL - Sistema GentePRO com IA');
  console.log('==========================================');
  
  const openai = new OpenAI({ 
    apiKey: process.env.OPENAI_API_KEY 
  });
  
  try {
    // Simular uma an√°lise de candidatos para uma vaga
    const prompt = `
Voc√™ √© um especialista em recrutamento e sele√ß√£o. Analise a vaga e os candidatos fornecidos e recomende os 2 melhores candidatos para a posi√ß√£o.

VAGA:
T√≠tulo: Desenvolvedor Full Stack
Descri√ß√£o: Desenvolvimento de aplica√ß√µes web modernas
Requisitos: JavaScript, React, Node.js, experi√™ncia com APIs
Sal√°rio: R$ 5000
Tipo de Contrato: CLT
Modalidade: Remoto

CANDIDATOS:
1. Jo√£o Silva
   - Cargo Atual: Desenvolvedor Frontend
   - Resumo: 3 anos de experi√™ncia com React e JavaScript
   - Habilidades: JavaScript, React, HTML, CSS
   - Pretens√£o Salarial: R$ 4500
   - Modalidade: Remoto

2. Maria Santos
   - Cargo Atual: Desenvolvedor Backend
   - Resumo: 2 anos de experi√™ncia com Node.js
   - Habilidades: Node.js, Python, SQL
   - Pretens√£o Salarial: R$ 6000
   - Modalidade: H√≠brido

Para cada candidato recomendado, forne√ßa:
1. Score de compatibilidade (0-100)
2. Reasoning (explica√ß√£o da recomenda√ß√£o)
3. Strengths (3-5 pontos fortes)
4. Concerns (2-3 preocupa√ß√µes)
5. Recommendations (2-3 recomenda√ß√µes)

Retorne apenas um JSON v√°lido no seguinte formato:
{
  "recommendations": [
    {
      "candidateId": "candidate-1",
      "candidateName": "Jo√£o Silva",
      "compatibilityScore": 85,
      "reasoning": "Explica√ß√£o detalhada da compatibilidade",
      "strengths": ["Forte em...", "Experi√™ncia em...", "Demonstra..."],
      "concerns": ["Falta experi√™ncia em...", "Sal√°rio pode ser..."],
      "recommendations": ["Verificar...", "Explorar..."]
    }
  ]
}
`;

    console.log('ü§ñ Testando an√°lise de candidatos com IA...');
    
    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: "Voc√™ √© um especialista em recrutamento e sele√ß√£o com mais de 15 anos de experi√™ncia. Analise candidatos de forma criteriosa e objetiva, considerando tanto aspectos t√©cnicos quanto comportamentais. Responda sempre em JSON v√°lido."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      response_format: { type: "json_object" },
      temperature: 0.3
    });

    const result = JSON.parse(response.choices[0].message.content || '{"recommendations": []}');
    
    console.log('‚úÖ An√°lise de IA funcionando perfeitamente!');
    console.log('üìä Resultados da an√°lise:');
    
    result.recommendations.forEach((rec, index) => {
      console.log(`\nüë§ ${rec.candidateName}:`);
      console.log(`   Score: ${rec.compatibilityScore}%`);
      console.log(`   Motivo: ${rec.reasoning}`);
      console.log(`   Pontos fortes: ${rec.strengths.join(', ')}`);
      console.log(`   Preocupa√ß√µes: ${rec.concerns.join(', ')}`);
      console.log(`   Recomenda√ß√µes: ${rec.recommendations.join(', ')}`);
    });
    
    console.log('\nüéâ SISTEMA COMPLETAMENTE FUNCIONAL!');
    console.log('   ‚úÖ API OpenAI: Funcionando');
    console.log('   ‚úÖ An√°lise de candidatos: Funcionando');
    console.log('   ‚úÖ Gera√ß√£o de recomenda√ß√µes: Funcionando');
    console.log('   ‚úÖ Sistema de fallback: Dispon√≠vel');
    
    console.log('\nüöÄ Agora voc√™ pode usar todas as funcionalidades de IA no GentePRO:');
    console.log('   - Gerar recomenda√ß√µes de candidatos');
    console.log('   - Obter insights detalhados');
    console.log('   - An√°lise de compatibilidade');
    console.log('   - Sugest√µes para entrevistas');
    
  } catch (error) {
    console.log('‚ùå Erro no teste final:');
    console.log('   Erro:', error.message);
    console.log('   C√≥digo:', error.code);
  }
}

testeFinalIA().catch(console.error); 