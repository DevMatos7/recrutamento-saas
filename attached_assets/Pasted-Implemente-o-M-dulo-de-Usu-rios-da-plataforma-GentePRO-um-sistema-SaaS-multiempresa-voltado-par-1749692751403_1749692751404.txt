Implemente o **M√≥dulo de Usu√°rios** da plataforma GentePRO, um sistema SaaS multiempresa voltado para recrutamento e sele√ß√£o. O backend √© desenvolvido em FastAPI com PostgreSQL, utilizando autentica√ß√£o JWT e controle de acesso por perfil.

---

### üéØ OBJETIVO

Gerenciar os usu√°rios da plataforma, vinculando cada um a uma empresa e, opcionalmente, a um departamento. Os usu√°rios ter√£o diferentes perfis de acesso: `admin`, `recrutador`, `gestor`, `candidato`. O m√≥dulo deve permitir CRUD completo de usu√°rios, login, autentica√ß√£o segura com senha criptografada, e associa√ß√£o a permiss√µes e empresas.

---

### üß± BACKEND ‚Äì MODELO `Usuario`

Crie o modelo `Usuario` com os seguintes campos:

- `id`: UUID (PK)
- `nome`: string
- `email`: string (√∫nico por empresa)
- `senha`: string (criptografada com bcrypt)
- `perfil`: enum (`admin`, `recrutador`, `gestor`, `candidato`)
- `empresa_id`: UUID (FK obrigat√≥rio)
- `departamento_id`: UUID (FK opcional)
- `ativo`: boolean
- `data_criacao`: datetime
- `data_atualizacao`: datetime

---

### üîê AUTENTICA√á√ÉO

- Utilizar JWT para login e autentica√ß√£o
- Senha armazenada com hash (bcrypt)
- Endpoints protegidos com `Depends(get_current_user)`
- Verifica√ß√£o de permiss√µes baseada no campo `perfil`

---

### üîå ENDPOINTS A IMPLEMENTAR

- `POST /auth/login` ‚Üí Login de usu√°rio, retorno de token JWT
- `GET /auth/me` ‚Üí Dados do usu√°rio autenticado
- `POST /usuarios` ‚Üí Criar usu√°rio (restrito ao perfil `admin`)
- `GET /usuarios` ‚Üí Listar usu√°rios da empresa
- `GET /usuarios/{id}` ‚Üí Visualizar detalhes do usu√°rio
- `PUT /usuarios/{id}` ‚Üí Editar usu√°rio
- `DELETE /usuarios/{id}` ‚Üí Inativar usu√°rio (soft delete)
- `PATCH /usuarios/{id}/perfil` ‚Üí Alterar perfil do usu√°rio

---

### üë§ PERFIS E PERMISS√ïES

| Perfil       | Descri√ß√£o                                               |
|--------------|----------------------------------------------------------|
| `admin`      | Acesso completo √† empresa, gest√£o total de usu√°rios      |
| `recrutador` | Acesso √†s vagas, candidatos e pipeline                   |
| `gestor`     | Visualiza e aprova candidatos do seu departamento        |
| `candidato`  | Usar√° o portal externo (futuro)                          |

---

### üß™ REGRAS DE NEG√ìCIO

- O e-mail do usu√°rio deve ser √∫nico **por empresa**
- Somente `admin` pode alterar perfil de outro usu√°rio
- Apenas `admin` pode listar todos os usu√°rios da empresa
- Um usu√°rio s√≥ pode ver/editar seu pr√≥prio perfil, exceto se for `admin`
- Ao excluir um usu√°rio, apenas marcar como `ativo = False`

---

### üíª FRONTEND ‚Äì SUGEST√ïES DE TELAS

#### Tela: Lista de Usu√°rios
- Colunas: nome, e-mail, perfil, status, departamento
- Filtros por perfil, departamento, status
- Bot√£o: "Novo Usu√°rio"
- A√ß√µes: editar, inativar

#### Tela: Cadastro / Edi√ß√£o de Usu√°rio
- Campos: nome, e-mail, senha, perfil, departamento
- Dropdown de perfil e departamento
- Bot√µes: Salvar, Cancelar

---

### ‚öôÔ∏è EXTRAS T√âCNICOS

- Usar UUID como chave prim√°ria
- Criptografar senha no cadastro e atualiza√ß√£o com `bcrypt`
- Implementar servi√ßo para login e verifica√ß√£o de hash
- Implementar refresh de token JWT (opcional)

---

### ‚úÖ RESULTADO ESPERADO

- Usu√°rios criados com perfis distintos
- Login JWT funcional
- Controle total de permiss√µes
- Relacionamento com empresa e departamento
- Estrutura pronta para uso com frontend e nos demais m√≥dulos
